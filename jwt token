const express = require("express");
const app = express();
require("dotenv").config();
const bcrypt = require("bcrypt");
const jwt = require("jsonwebtoken");
app.use(express.json())
app.use(express.urlencoded({ extended: false }))
app.set("view-engine","ejs");

const db = [
    {
        email:"123@gmail.com",
        password:"12345"
    },
    {
        email:"mahesh@gmail.com",
        password:"12345"
    }
];



app.post("/login",(req,res)=>{
    const token = jwt.sign({ email: req.body.email }, process.env.TOKEN_SECRET)
   return res.send({token:token});

})





app.get("/post", authentication,(req,res)=>{

    res.status(201).send(db.filter(i=>i.email == req.user.email));
    
    
    
    const generateOTP = () => {
    let otp = Math.random() * 1000000;
    otp = parseInt(otp);
    return otp;
}
})

function authentication(req, res, next) {
    const BrarerToken = req.headers['authorization'];
    const token =BrarerToken && BrarerToken.split(" ")[1];
    if(token == null) return res.sendStatus(401)
    jwt.verify(token,process.env.TOKEN_SECRET,(err,rel)=>{
        if(err) return res.sendStatus(403);
         req.user = rel;
         next();
    })


}

// app.get("/", (req, res) => {
//     res.render(`${__dirname}/pages/register.ejs`);
// })
// app.get("/login",(req,res)=>{
//     res.render(`${__dirname}/pages/login.ejs`);
// })

// app.get("/register", (req, res) => {
//     res.render(`${__dirname}/pages/register.ejs`);
// })
// app.post("/register",async(req,res)=>{
//     try{
//         const hashpass =await bcrypt.hash(req.body.password, 10);
//         db.push(
//             {
//                 name: req.body.name,
//                 email: req.body.email,
//                 password: hashpass
//             }
//         )
//         console.log(db);
//         res.render(`${__dirname}/pages/login.ejs`);

       
//     }
//     catch{
//         res.redirect(`${__dirname}/pages/register.ejs`);
//     }
  
// })

app.listen(5000,()=>console.log("server is running on port 5000"));
